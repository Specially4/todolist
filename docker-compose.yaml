version: '3.9'

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
    - 80:80
    depends_on:
      - api
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.docker_env:/app/.env
    ports:
      - "8000:8000"
  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:/app/.env
    command: >
      sh -c "python3 manage.py makemigrations"
      sh -c "python3 manage.py migrate"
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./.docker_env:/app/.env
      - ./pg_data:/var/lib/postgresql/data

volumes:
  pg_data: